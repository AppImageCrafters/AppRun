name: "pre-release"

on:
  push:
    branches:
      - "master"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        TARGET_ARCH: [ i386, x86_64, gnueabihf, aarch64 ]
        BUILD_TYPE: [ Debug, Release ]
    env:
      BUILD_TYPE: ${{ matrix.BUILD_TYPE }}
      TARGET_ARCH: ${{ matrix.TARGET_ARCH }}

    steps:
      - uses: actions/checkout@v2

      - name: Build ${{ matrix.BUILD_TYPE }} ${{ matrix.TARGET_ARCH }}
        run: tooling/build-in-docker.sh ${{ env.BUILD_TYPE }}

      - name: Test ${{ matrix.BUILD_TYPE }} ${{ matrix.TARGET_ARCH }}
        if: ${{ env.TARGET_ARCH == 'x86_64' || env.TARGET_ARCH == 'i386' }}
        run: tooling/test-in-docker.sh ${{ env.BUILD_TYPE }}

      - name: Prepare artifacts
        shell: bash
        working-directory: cmake-build-${{ env.BUILD_TYPE }}-${{ env.TARGET_ARCH }}
        run: |
          mkdir -p ${{runner.workspace}}/dist
          cp src/apprun/AppRun ${{runner.workspace}}/dist/AppRun-$BUILD_TYPE-$TARGET_ARCH
          cp src/hooks/libapprun_hooks.so ${{runner.workspace}}/dist/libapprun_hooks-$BUILD_TYPE-$TARGET_ARCH.so

      - name: Upload Artifacts ${{ env.TARGET_ARCH }}
        uses: actions/upload-artifact@v2.1.4
        with:
          name: artifacts
          path: ${{runner.workspace}}/dist/*

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts from build job
        uses: actions/download-artifact@v2
        with:
          name: artifacts

      - name: Release In-Development AppImage
        uses: marvinpinto/action-automatic-releases@latest

        with:
          title: Continuous build
          automatic_release_tag: 'continuous'
          prerelease: true
          draft: false
          files: ./*
          repo_token: ${{ secrets.GITHUB_TOKEN }}