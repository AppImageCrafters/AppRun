# language target
language: c
compiler: gcc
os: linux
dist: xenial
sudo: required

matrix:
  include:
    - env:
      - TARGET_ARCH=x86_64
      - TARGET_DEB_ARCH=amd64
      install: false
    - env:
      - TARGET_ARCH=i386
      - TARGET_DEB_ARCH=i386
      install:
       - sudo apt-get install -y gcc-multilib
    - env:
      - TARGET_ARCH=aarch64
      - TARGET_DEB_ARCH=arm64
    - env:
      - TARGET_ARCH=gnueabihf
      - TARGET_DEB_ARCH=armhf

install:
  - sudo dpkg --add-architecture $TARGET_DEB_ARCH
  - echo "deb [arch=$TARGET_DEB_ARCH] http://ports.ubuntu.com/ubuntu-ports xenial main restricted multiverse universe" | sudo tee /etc/apt/sources.list.d/ubuntu-ports.list
  - echo "deb [arch=$TARGET_DEB_ARCH] http://ports.ubuntu.com/ubuntu-ports xenial-updates main restricted multiverse universe" | sudo tee /etc/apt/sources.list.d/ubuntu-ports.list
  - echo "deb [arch=$TARGET_DEB_ARCH] http://ports.ubuntu.com/ubuntu-ports xenial-security main restricted multiverse universe" | sudo tee /etc/apt/sources.list.d/ubuntu-ports.list
  - sudo apt-get update -y
  - sudo apt-get install -y crossbuild-essential-$TARGET_DEB_ARCH

script:
  - cmake . -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="cmake/${TARGET_ARCH}-toolchain.cmake"
  - make -j$(nproc)

# make the AppImage bundle
after_success:
  # listing the result
  - ls -lh src/*.so
  # get the tag version

  - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
  - mv src/libappimage_exec_wrapper.so libappimage_exec_wrapper-$TARGET_DEB_ARCH.so
  - bash upload.sh libappimage_exec_wrapper-$TARGET_DEB_ARCH.so

branches:
  except:
    # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous.*)$/

notifications:
  email: false